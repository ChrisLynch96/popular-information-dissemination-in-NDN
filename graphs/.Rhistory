plot(as.party(pruned_model))
xerrors[count] <- model$cptable[opt, "xerror"]
cps[count] <- model$cptable[opt, "CP"]
count = count + 1
}
}
dev.off()
## Dustbin
#
#fx.noimp <- rpart(formula = formulas[[1]], data = data, parms=list(split="information"), method = "class")
#fy.noimp <- rpart(formula = formulas[[2]], data = data, parms=list(split="information"), method = "class")
#fxy.noimp <- rpart(formula = formulas[[3]], data = data, parms=list(split="information"), method = "class")
## Model creation with imputation
#fx.withimp <- rpart(formula = formulas[[1]], data = x.complete, parms=list(split="information"), method = "class")
#fy.withimp <- rpart(formula = formulas[[2]], data = y.complete, parms=list(split="information"), method = "class")
#fxy.withimp <- rpart(formula = formulas[[3]], data = full.complete, parms=list(split="information"), method = "class")
xerrors
cps
# install.packages('ggplot2')
library(ggplot2)
# install.packages('scales')
library(scales)
# install.packages('doBy')
library(doBy)
#########################
# Rate trace processing #
#########################
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
data$FaceId <- factor(data$FaceId)
data$Kilobits <- data$Kilobytes * 8
data$Type = factor(data$Type)
# exlude irrelevant types
data = subset(data, Type %in% c("InInterests", "OutInterests", "InData", "OutData"))
# combine stats from all faces
data.combined = summaryBy(. ~ Time + Node + Type, data=data, FUN=sum)
data.root = subset (data.combined, Node == "root")
data.leaves = subset(data.combined, Node %in% c("leaf-1", "leaf-2", "leaf-3", "leaf-4"))
# graph rates on all nodes in Kilobits
g.all <- ggplot(data.combined) +
geom_point(aes (x=Time, y=Kilobits.sum, color=Type), size=1) +
ylab("Rate [Kbits/s]") +
facet_wrap(~ Node)
print(g.all)
# graph rates on the root nodes in Packets
g.root <- ggplot(data.root) +
geom_point(aes (x=Time, y=Kilobits.sum, color=Type), size=2) +
geom_line(aes (x=Time, y=Kilobits.sum, color=Type), size=0.5) +
ylab("Rate [Kbits/s]")
print(g.root)
png("src/ndnSIM/docs/source/_static/root-rates.png", width=500, height=250)
print(g.root)
retval <- dev.off()
# install.packages('ggplot2')
library(ggplot2)
# install.packages('scales')
library(scales)
# install.packages('doBy')
library(doBy)
#########################
# Rate trace processing #
#########################
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
data$FaceId <- factor(data$FaceId)
data$Kilobits <- data$Kilobytes * 8
data$Type = factor(data$Type)
# exlude irrelevant types
data = subset(data, Type %in% c("InInterests", "OutInterests", "InData", "OutData"))
# combine stats from all faces
data.combined = summaryBy(. ~ Time + Node + Type, data=data, FUN=sum)
data.root = subset (data.combined, Node == "1")
data.leaves = subset(data.combined, Node %in% c("leaf-1", "leaf-2", "leaf-3", "leaf-4"))
# graph rates on all nodes in Kilobits
g.all <- ggplot(data.combined) +
geom_point(aes (x=Time, y=Kilobits.sum, color=Type), size=1) +
ylab("Rate [Kbits/s]") +
facet_wrap(~ Node)
print(g.all)
# graph rates on the root nodes in Packets
g.root <- ggplot(data.root) +
geom_point(aes (x=Time, y=Kilobits.sum, color=Type), size=2) +
geom_line(aes (x=Time, y=Kilobits.sum, color=Type), size=0.5) +
ylab("Rate [Kbits/s]")
print(g.root)
png("src/ndnSIM/docs/source/_static/root-rates.png", width=500, height=250)
print(g.root)
retval <- dev.off()
# install.packages('ggplot2')
library(ggplot2)
# install.packages('scales')
library(scales)
# install.packages('doBy')
library(doBy)
#########################
# Rate trace processing #
#########################
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
data$FaceId <- factor(data$FaceId)
data$Kilobits <- data$Kilobytes * 8
data$Type = factor(data$Type)
# exlude irrelevant types
data = subset(data, Type %in% c("InInterests", "OutInterests", "InData", "OutData"))
# combine stats from all faces
data.combined = summaryBy(. ~ Time + Node + Type, data=data, FUN=sum)
data.root = subset (data.combined, Node == "257")
data.leaves = subset(data.combined, Node %in% c("leaf-1", "leaf-2", "leaf-3", "leaf-4"))
# graph rates on all nodes in Kilobits
g.all <- ggplot(data.combined) +
geom_point(aes (x=Time, y=Kilobits.sum, color=Type), size=1) +
ylab("Rate [Kbits/s]") +
facet_wrap(~ Node)
print(g.all)
# graph rates on the root nodes in Packets
g.root <- ggplot(data.root) +
geom_point(aes (x=Time, y=Kilobits.sum, color=Type), size=2) +
geom_line(aes (x=Time, y=Kilobits.sum, color=Type), size=0.5) +
ylab("Rate [Kbits/s]")
print(g.root)
png("src/ndnSIM/docs/source/_static/root-rates.png", width=500, height=250)
print(g.root)
retval <- dev.off()
#!/usr/bin/env Rscript
library(ggplot2)
#########################
# Rate trace processing #
#########################
data = read.table("drop-trace.txt", header=T)
data$Node = factor(data$Node)
data$Kilobits <- data$Kilobytes * 8
data$Type = factor(data$Type)
## data.rtr = data[grep("Rtr", data$Node),]
# graph rates on all nodes in Kilobits
g.all <- ggplot(data, aes(x=Time, y=Kilobits, color=Type)) +
geom_point(size=2) +
geom_line() +
ylab("Packet drop rate [Kbits/s]") +
facet_wrap(~ Node) +
theme_bw()
png("src/ndnSIM/docs/source/_static/l2-rate-tracer.png", width=800, height=500)
print(g.all)
x = dev.off()
x = dev.off()
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
#!/usr/bin/env Rscript
library(ggplot2)
#########################
# Rate trace processing #
#########################
data = read.table("drop-trace.txt", header=T)
data$Node = factor(data$Node)
data$Kilobits <- data$Kilobytes * 8
data$Type = factor(data$Type)
## data.rtr = data[grep("Rtr", data$Node),]
# graph rates on all nodes in Kilobits
g.all <- ggplot(data, aes(x=Time, y=Kilobits, color=Type)) +
geom_point(size=2) +
geom_line() +
ylab("Packet drop rate [Kbits/s]") +
facet_wrap(~ Node) +
theme_bw()
png("l2-rate-tracer.png", width=800, height=500)
print(g.all)
x = dev.off()
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
#!/usr/bin/env Rscript
library(ggplot2)
library('scales')
library(doBy)
# Setup
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
# Number of packets in the network
data
data.totalPackets = summaryBy(. ~ Time + Node + Type, data=data, id=PacketRaw, FUN=sum)
data.totalPackets = summaryBy(. ~ Time + Node + Type, data=data, id='PacketRaw', FUN=sum)
data.totalPackets
data.totalPackets = summaryBy(. ~ Time + Node + Type, data=data, FUN=sum)
data.totalPackets
g.all <- ggplot(totalPackets) +
geom_point(aes (x=Time, y=PacketRaw.sum, color=Type), size=1) +
ylab("Num. packets") +
facet_wrap(~ Node)
g.all <- ggplot(data.totalPackets) +
geom_point(aes (x=Time, y=PacketRaw.sum, color=Type), size=1) +
ylab("Num. packets") +
facet_wrap(~ Node)
print(g.all)
print(g.all)
#!/usr/bin/env Rscript
library(ggplot2)
# Setup
rm(list = ls())
#!/usr/bin/env Rscript
library(ggplot2)
library('scales')
library(doBy)
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
data.packets = data[c("Time", "Node", "PacketRaw")]
data.packets
is.factor(data$Node)
is.factor(data.packets$Node)
data.packets.aggregate = aggregate(data.packets, by(Time, Node), FUN=sum)
data.packets
data.packets.aggregate = aggregate(data.packets, by(Node), FUN=sum)
data.packets.aggregate = aggregate(data.packets, by=list(Time, Node), FUN=sum)
data.packets.aggregate = aggregate(data.packets, by=list(data$Time, data$Node), FUN=sum)
data.packets.aggregate = aggregate(data$PacketRaw ~ Time + Node, data=data.packets, FUN=sum)
data.packets.aggregate
g.all <- ggplot(data.packetse.aggregate) +
geom_point(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
g.all <- ggplot(data.packets.aggregate) +
geom_point(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
print(g.all)
data.packets.aggregate
data.packets.aggregate = aggregate(PacketRaw ~ Time + Node, data=data.packets, FUN=sum)
data.packets.aggregate
g.all <- ggplot(data.packets.aggregate) +
geom_point(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
print(g.all)
g.all <- ggplot(data.packets.aggregate) +
geom_point(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets") + facet_wrap(~ Node)
print(g.all)
g.all <- ggplot(data.packets.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets") + facet_wrap(~ Node)
print(g.all)
data.packets.all.agregate = aggregate(PacketRaw ~ Time, data=data.packets.aggregate, FUN=sum)
data.packets.all.agregate
g.all <- ggplot(data.packets.all.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
data.packets.all.aggregate = aggregate(PacketRaw ~ Time, data=data.packets.aggregate, FUN=sum)
g.all <- ggplot(data.packets.all.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
#!/usr/bin/env Rscript
library(ggplot2)
library('scales')
library(doBy)
# Setup
rm(list = ls())
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
data.packets = data[c("Time", "Node", "PacketRaw")]
data.packets.aggregate = aggregate(PacketRaw ~ Time + Node, data=data.packets, FUN=sum)
g.all.packets <- ggplot(data.packets.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets") + facet_wrap(~ Node)
print(g.all)
print(g.all.packets)
data.packets.all.aggregate = aggregate(PacketRaw ~ Time, data=data.packets.aggregate, FUN=sum)
g.total.packets <- ggplot(data.packets.all.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
print(g.total.packets)
#!/usr/bin/env Rscript
library(ggplot2)
library('scales')
library(doBy)
# functions
# Setup
rm(list = ls())
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
# Number of packets in the network
data.packets = data[c("Time", "Node", "PacketRaw")]
data.packets.aggregate = aggregate(PacketRaw ~ Time + Node, data=data.packets, FUN=sum)
g.all.packets <- ggplot(data.packets.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets") + facet_wrap(~ Node)
png("sum.all.packets.png", width=500, height=250)
print(g.all.packets)
retval <- dev.off()
data.packets.all.aggregate = aggregate(PacketRaw ~ Time, data=data.packets.aggregate, FUN=sum)
g.total.packets <- ggplot(data.packets.all.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
png("sum.total.packets.png", width=500, height=250)
print(g.total.packets)
retval <- dev.off()
# Dropped packets
# Successful Deliveries
# Latency
write.csv(g.all.packet,"NumPackets.csv", row.names = FALSE)
write.csv(g.all.packets,"NumPackets.csv", row.names = FALSE)
#!/usr/bin/env Rscript
library(ggplot2)
library('scales')
library(doBy)
# functions
# Setup
rm(list = ls())
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
# Number of packets
data.packets = data[c("Time", "Node", "PacketRaw")]
data.packets.aggregate = aggregate(PacketRaw ~ Time + Node, data=data.packets, FUN=sum)
g.packets.aggregate <- ggplot(data.packets.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets") + facet_wrap(~ Node)
png("sum.all.packets.png", width=500, height=250)
print(g.packets.aggregate)
retval <- dev.off()
write.csv(data.all.packets,"NumPackets.csv", row.names = FALSE)
data.packets.all.aggregate = aggregate(PacketRaw ~ Time, data=data.packets.aggregate, FUN=sum)
g.packets.all.aggregate <- ggplot(data.packets.all.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
png("sum.total.packets.png", width=500, height=250)
print(g.packets.all.aggregate)
retval <- dev.off()
# Dropped packets
# Successful Deliveries
# Latency
write.csv(data.packets.aggregate,"NumPackets.csv", row.names = FALSE)
write.csv(data.packets.all.aggregate,"NumPackets.csv", row.names = FALSE)
sum.packets = sum(data.packets.all.aggregate$PacketRaw)
sum.packets
data.packets.all.aggregate
sum.packets = sum(data.packets.all.aggregate$PacketRaw)
sum.packets
#!/usr/bin/env Rscript
library(ggplot2)
# functions
# Setup
rm(list = ls())
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
# Number of packets
data.packets = data[c("Time", "Node", "PacketRaw")]
data.packets.aggregate = aggregate(PacketRaw ~ Time + Node, data=data.packets, FUN=sum)
g.packets.aggregate <- ggplot(data.packets.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets") + facet_wrap(~ Node)
png("sum.all.packets.png", width=500, height=250)
print(g.packets.aggregate)
retval <- dev.off()
data.packets.all.aggregate = aggregate(PacketRaw ~ Time, data=data.packets.aggregate, FUN=sum)
g.packets.all.aggregate <- ggplot(data.packets.all.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
png("sum.total.packets.png", width=500, height=250)
print(g.packets.all.aggregate)
retval <- dev.off()
sum.packets = sum(data.packets.all.aggregate$PacketRaw)
write.csv(data.packets.all.aggregate,"NumPackets.csv", row.names = FALSE)
# Dropped packets
# Successful Deliveries
# Latency
Sys.Date()
png("$MYSPACE/dissertation/notes/images/results/%Sys.Date()%sum.total.packets.png", width=500, height=250)
png("$MYSPACE/dissertation/notes/images/results/" + Sys.Date() + "sum.total.packets.png", width=500, height=250)
png("$MYSPACE/dissertation/notes/images/results/" + toString(Sys.Date())  + "sum.total.packets.png", width=500, height=250)
#!/usr/bin/env Rscript
library(ggplot2)
# functions
# Setup
rm(list = ls())
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
# Number of packets
data.packets = data[c("Time", "Node", "PacketRaw")]
data.packets.aggregate = aggregate(PacketRaw ~ Time + Node, data=data.packets, FUN=sum)
g.packets.aggregate <- ggplot(data.packets.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets") + facet_wrap(~ Node)
png("sum.all.packets.png", width=500, height=250)
print(g.packets.aggregate)
retval <- dev.off()
data.packets.all.aggregate = aggregate(PacketRaw ~ Time, data=data.packets.aggregate, FUN=sum)
g.packets.all.aggregate <- ggplot(data.packets.all.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
png("sum.total.packets.png", width=500, height=250)
print(g.packets.all.aggregate)
retval <- dev.off()
sum.packets = sum(data.packets.all.aggregate$PacketRaw)
write.csv(data.packets.all.aggregate,"NumPackets.csv", row.names = FALSE)
# Dropped packets
# Successful Deliveries
# Latency
#!/usr/bin/env Rscript
library(ggplot2)
# functions
# Setup
rm(list = ls())
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
# Number of packets
data.packets = data[c("Time", "Node", "PacketRaw")]
data.packets.aggregate = aggregate(PacketRaw ~ Time + Node, data=data.packets, FUN=sum)
g.packets.aggregate <- ggplot(data.packets.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets") + facet_wrap(~ Node)
png("sum.all.packets.png", width=500, height=250)
print(g.packets.aggregate)
retval <- dev.off()
data.packets.all.aggregate = aggregate(PacketRaw ~ Time, data=data.packets.aggregate, FUN=sum)
g.packets.all.aggregate <- ggplot(data.packets.all.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
png("sum.total.packets.png", width=500, height=250)
print(g.packets.all.aggregate)
retval <- dev.off()
sum.packets = sum(data.packets.all.aggregate$PacketRaw)
write.csv(data.packets.all.aggregate,"NumPackets.csv", row.names = FALSE)
# Dropped packets
# Successful Deliveries
# Latency
png("sum.all.packets.png", width=500, height=250)
#!/usr/bin/env Rscript
library(ggplot2)
# functions
# Setup
rm(list = ls())
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
# Number of packets
data.packets = data[c("Time", "Node", "PacketRaw")]
data.packets.aggregate = aggregate(PacketRaw ~ Time + Node, data=data.packets, FUN=sum)
g.packets.aggregate <- ggplot(data.packets.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets") + facet_wrap(~ Node)
png("sum.all.packets.png", width=500, height=250)
print(g.packets.aggregate)
retval <- dev.off()
data.packets.all.aggregate = aggregate(PacketRaw ~ Time, data=data.packets.aggregate, FUN=sum)
g.packets.all.aggregate <- ggplot(data.packets.all.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
png("sum.total.packets.png", width=500, height=250)
print(g.packets.all.aggregate)
retval <- dev.off()
sum.packets = sum(data.packets.all.aggregate$PacketRaw)
write.csv(data.packets.all.aggregate,"NumPackets.csv", row.names = FALSE)
# Dropped packets
# Successful Deliveries
# Latency
#!/usr/bin/env Rscript
library(ggplot2)
# functions
# Setup
rm(list = ls())
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
# Number of packets
data.packets = data[c("Time", "Node", "PacketRaw")]
data.packets.aggregate = aggregate(PacketRaw ~ Time + Node, data=data.packets, FUN=sum)
g.packets.aggregate <- ggplot(data.packets.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets") + facet_wrap(~ Node)
png("sum.all.packets.png", width=500, height=250)
print(g.packets.aggregate)
retval <- dev.off()
data.packets.all.aggregate = aggregate(PacketRaw ~ Time, data=data.packets.aggregate, FUN=sum)
g.packets.all.aggregate <- ggplot(data.packets.all.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
png("sum.total.packets.png", width=500, height=250)
print(g.packets.all.aggregate)
retval <- dev.off()
sum.packets = sum(data.packets.all.aggregate$PacketRaw)
write.csv(data.packets.all.aggregate,"NumPackets.csv", row.names = FALSE)
# Dropped packets
# Successful Deliveries
# Latency
#!/usr/bin/env Rscript
library(ggplot2)
# functions
# Setup
rm(list = ls())
setwd("~/workspace/github.com/ChrisLynch96/masters-project/scenario-template/graphs")
data = read.table("rate-trace.txt", header=T)
data$Node = factor(data$Node)
# Number of packets
data.packets = data[c("Time", "Node", "PacketRaw")]
data.packets.aggregate = aggregate(PacketRaw ~ Time + Node, data=data.packets, FUN=sum)
g.packets.aggregate <- ggplot(data.packets.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets") + facet_wrap(~ Node)
png("sum.all.packets.png", width=1920, height=1080)
print(g.packets.aggregate)
retval <- dev.off()
data.packets.all.aggregate = aggregate(PacketRaw ~ Time, data=data.packets.aggregate, FUN=sum)
g.packets.all.aggregate <- ggplot(data.packets.all.aggregate) +
geom_line(aes (x=Time, y=PacketRaw), size=1) +
ylab("Num. packets")
png("sum.total.packets.png", width=1920, height=1080)
print(g.packets.all.aggregate)
retval <- dev.off()
sum.packets = sum(data.packets.all.aggregate$PacketRaw)
write.csv(data.packets.all.aggregate,"NumPackets.csv", row.names = FALSE)
# Dropped packets
# Successful Deliveries
# Latency
